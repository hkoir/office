# Generated by Django 5.1.8 on 2025-04-14 17:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0002_initial'),
        ('inventory', '0001_initial'),
        ('product', '0001_initial'),
        ('purchase', '0002_initial'),
        ('sales', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FaultyProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faulty_product_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('reason_for_fault', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('UNDER_INSPECTION', 'UNDER INSPECTION'), ('REPAIRABLE', 'REPAIRABLE'), ('UNREPAIRABLE', 'UNREPAIRABLE'), ('REPAIRED_AND_READY', 'Repaire and ready'), ('REPAIRED_AND_RETURNED', 'Repaire and returned'), ('SCRAPPED', 'SCRAPPED')], default='UNDER_INSPECTION', max_length=100, null=True)),
                ('return_status', models.BooleanField(blank=True, default=False, null=True)),
                ('repair_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('return_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('resolution_action', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_feedback', models.TextField(blank=True, null=True)),
                ('inspection_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_faulty_product', to='purchase.batch')),
                ('inspected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='return_locations', to='inventory.location')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faulty_sales', to='sales.saleorderitem')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_faulty_product', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='return_warehouses', to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='Replacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'PENDING'), ('REPLACED_DONE', 'Replaced'), ('CANCELLED', 'CANCELLED')], default='PENDING', max_length=20, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_replacement', to='purchase.batch')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replacement_customers', to='customer.customer')),
                ('faulty_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faulty_replacement', to='repairreturn.faultyproduct')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replacement_location', to='inventory.location')),
                ('replacement_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replacement_products', to='product.product')),
                ('source_inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replacement_source_inventory', to='inventory.inventory')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replacement_users', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replacement_warehouse', to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnOrRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_id', models.CharField(blank=True, max_length=20, null=True)),
                ('quantity_sold', models.PositiveIntegerField(blank=True, null=True)),
                ('return_reason', models.CharField(blank=True, choices=[('DEFECTIVE', 'DEFECTIVE'), ('NOT_AS_DESCRIBED', 'NOT AS DESCRIBED'), ('OTHER', 'OTHER')], max_length=20, null=True)),
                ('refund_type', models.CharField(blank=True, choices=[('FULL', 'Full Refund'), ('PARTIAL', 'Partial Refund')], max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'PENDING'), ('Acknowledged', 'Acknowledged'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=20, null=True)),
                ('quantity_refund', models.PositiveIntegerField(blank=True, null=True)),
                ('requested_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('progress_by_customer', models.FloatField(blank=True, default=0, null=True)),
                ('progress_by_user', models.FloatField(blank=True, default=0, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_return_refund', to='customer.customer')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='return_refund_locations', to='inventory.location')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_returns', to='sales.saleorderitem')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='return_or_refund_user', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='return_refund_warehouses', to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='RepairReturnCustomerFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_id', models.CharField(max_length=30)),
                ('is_work_completed', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Is Work Completed?')),
                ('progress', models.CharField(blank=True, choices=[('PROGRESS-20%', 'Progress 20%'), ('PROGRESS-30%', 'Progress 30%'), ('PROGRESS-40%', 'Progress 40%'), ('PROGRESS-50%', 'Progress 50%'), ('PROGRESS-60%', 'Progress 60%'), ('PROGRESS-70%', 'Progress 70%'), ('PROGRESS-80%', 'Progress 80%'), ('PROGRESS-90%', 'Progress 90%'), ('PROGRESS-100%', 'Progress 100%')], max_length=100, null=True)),
                ('work_quality_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('communication_quality_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('timely_completion_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('behavoiural_quality_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('product_quality', models.FloatField(blank=True, default=0.0, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='repair_return')),
                ('comments', models.TextField(blank=True, null=True)),
                ('repair_return', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='return_feedback', to='repairreturn.returnorrefund')),
            ],
        ),
        migrations.AddField(
            model_name='faultyproduct',
            name='return_request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faulty_products', to='repairreturn.returnorrefund'),
        ),
        migrations.CreateModel(
            name='ScrappedOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=30)),
                ('status', models.CharField(blank=True, choices=[('SUBMITTED', 'Submitted'), ('REVIEWED', 'Reviewed'), ('SCRAPPED_OUT', 'Scrapped out'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('approval_data', models.JSONField(blank=True, default=dict, null=True)),
                ('requester_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('reviewer_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('approver_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('Requester_remarks', models.TextField(blank=True, null=True)),
                ('Reviewer_remarks', models.TextField(blank=True, null=True)),
                ('Approver_remarks', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scrap_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScrappedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrapped_item_id', models.CharField(max_length=30)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'PENDING'), ('SUBMITTED', 'Submitted'), ('SCRAPPED_OUT', 'Scrapped out'), ('COMPLETED', 'COMPLETED')], default='PENDING', max_length=20, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_scrap', to='purchase.batch')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scrapped_location', to='inventory.location')),
                ('scrapped_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scrapped_product', to='product.product')),
                ('source_inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scrapped_source_inventory', to='inventory.inventory')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scrap_item_user', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scrapped_warehouse', to='inventory.warehouse')),
                ('scrapped_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scrap_request_items', to='repairreturn.scrappedorder')),
            ],
        ),
    ]
