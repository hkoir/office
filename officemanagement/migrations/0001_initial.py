# Generated by Django 5.1.8 on 2025-04-14 17:50

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_initial'),
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StationaryUsageRequestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StationaryUsageRequestOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(max_length=50)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=10)),
                ('approved_by', models.CharField(blank=True, max_length=255, null=True)),
                ('approved_on', models.DateField(default=django.utils.timezone.now)),
                ('approval_data', models.JSONField(blank=True, default=dict, null=True)),
                ('requester_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('reviewer_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('approver_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('Requester_remarks', models.TextField(blank=True, null=True)),
                ('Reviewer_remarks', models.TextField(blank=True, null=True)),
                ('Approver_remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
            ],
            options={
                'permissions': [('can_request', 'can request'), ('can_review', 'Can review'), ('can_approve', 'Can approve')],
            },
        ),
        migrations.CreateModel(
            name='VisitorGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('purpose', models.TextField(blank=True, null=True)),
                ('expected_check_in_time', models.DateTimeField(blank=True, help_text='Optional', null=True)),
                ('check_in', models.DateTimeField(blank=True, null=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VisitorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor_type', models.CharField(blank=True, choices=[('local', 'Local'), ('foreigner', 'Foreigner')], max_length=100, null=True)),
                ('name', models.CharField(max_length=255)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='visitor_photo')),
                ('check_in', models.DateTimeField(blank=True, null=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseSubmissionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_id', models.CharField(max_length=50)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('has_advance', models.BooleanField(default=False)),
                ('submission_date', models.DateField()),
                ('approved_on', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('approved', 'Approved')], default='submitted', max_length=30)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expense_approver', to='core.employee')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expense_submission_user', to='core.employee')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseSubmissionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Office Supplies', 'Office Supplies'), ('Travel', 'Travel'), ('Utilities', 'Utilities'), ('Other', 'Other')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('submission_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_submitted', to='officemanagement.expensesubmissionorder')),
            ],
        ),
        migrations.CreateModel(
            name='ITSupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(max_length=30)),
                ('issue', models.TextField()),
                ('status', models.CharField(choices=[('Open', 'Open'), ('In Progress', 'In Progress'), ('Closed', 'Closed')], default='Open', max_length=20)),
                ('solution_description', models.TextField(blank=True, null=True)),
                ('resolved_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_tickets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('meeting_type', models.CharField(choices=[('internal', 'Internal'), ('external', 'External')], max_length=50)),
                ('organization', models.CharField(blank=True, max_length=100, null=True)),
                ('meeting_place', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('meeting_date', models.DateField()),
                ('meeting_start_time', models.TimeField(blank=True, null=True)),
                ('meeting_end_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('order_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meeting_order_user', to='core.employee')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attendees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_attendees', to='core.employee')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('meeting_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='officemanagement.meetingorder')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('capacity', models.PositiveIntegerField()),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingRoomBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.TextField()),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('booked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_room_booking_user', to='core.employee')),
                ('meeting_ref', models.ForeignKey(blank=True, help_text='Optional', null=True, on_delete=django.db.models.deletion.CASCADE, to='officemanagement.meetingorder')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meeting_room_bookings', to='officemanagement.meetingroom')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OfficeAdvance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advance_id', models.CharField(blank=True, max_length=50, null=True)),
                ('purpose', models.CharField(choices=[('Office Supplies', 'Office Supplies'), ('Travel', 'Travel'), ('Utilities', 'Utilities'), ('Other', 'Other')], max_length=150)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('estimated_reimbursement_date', models.DateField()),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=10, null=True)),
                ('approved_on', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='office_advance_employee', to='core.employee')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='expensesubmissionorder',
            name='advance_ref',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='officemanagement.officeadvance'),
        ),
        migrations.CreateModel(
            name='OfficeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(blank=True, choices=[('agreement', 'Agreement Paper'), ('licencing', 'Licence Paper'), ('Meeting', 'Meeting Papers'), ('govt-circular', 'Govt. Circlular'), ('employee-documents', 'Employee Related Docs'), ('general', 'General')], default='General', max_length=150, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.FileField(upload_to='Scan_documents/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_doc', to='core.company')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_doc', to='core.department')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='office_doc_upload_user', to='core.employee')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StationaryBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('quantity', models.PositiveIntegerField()),
                ('remaining_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StationaryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category_id', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stationary_category_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StationaryInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('reorder_level', models.PositiveIntegerField(blank=True, default=10, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_inventory', to='officemanagement.stationarybatch')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.location')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='StationaryProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reorder_level', models.PositiveIntegerField(default=10)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stationary_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='officemanagement.stationarycategory')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StationaryInventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('transaction_type', models.CharField(choices=[('inbound', 'Inbound'), ('outbound', 'Outbound')], max_length=50)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batch_inventory_transaction', to='officemanagement.stationarybatch')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.location')),
                ('stationary_inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='officemanagement.stationaryinventory')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.warehouse')),
                ('stationary_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='officemanagement.stationaryproduct')),
            ],
        ),
        migrations.AddField(
            model_name='stationaryinventory',
            name='stationary_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='officemanagement.stationaryproduct'),
        ),
        migrations.AddField(
            model_name='stationarybatch',
            name='stationary_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='officemanagement.stationaryproduct'),
        ),
        migrations.CreateModel(
            name='StationaryPurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('purchase_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='officemanagement.stationarybatch')),
                ('stationary_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='officemanagement.stationarycategory')),
                ('stationary_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='officemanagement.stationaryproduct')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StationaryPurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('invoice_file', models.FileField(blank=True, null=True, upload_to='stationary_invoices')),
                ('approval_status', models.CharField(blank=True, choices=[('SUBMITTED', 'Submitted'), ('REVIEWED', 'Reviewed'), ('APPROVED', 'Approved'), ('CANCELLED', 'Cancelled')], default='SUBMITTED', max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('COMPLETED', 'Completed'), ('IN-PROCESS', 'In Process'), ('CANCELLED', 'Cancelled')], default='IN-PROCESS', max_length=20, null=True)),
                ('request_submission_date', models.DateField(default=django.utils.timezone.now)),
                ('approved_on', models.DateField(default=django.utils.timezone.now)),
                ('order_date', models.DateField(default=django.utils.timezone.now)),
                ('approval_data', models.JSONField(blank=True, default=dict, null=True)),
                ('requester_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('reviewer_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('approver_approval_status', models.CharField(blank=True, max_length=20, null=True)),
                ('Requester_remarks', models.TextField(blank=True, null=True)),
                ('Reviewer_remarks', models.TextField(blank=True, null=True)),
                ('Approver_remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stationary_purchase_order_user', to='core.employee')),
            ],
            options={
                'permissions': [('can_request', 'can request'), ('can_review', 'Can review'), ('can_approve', 'Can approve')],
            },
        ),
    ]
