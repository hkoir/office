# Generated by Django 5.1.8 on 2025-04-14 17:50

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('ANNUAL', 'Annual Leave'), ('SICK', 'Sick Leave'), ('CASUAL', 'Casual Leave'), ('MATERNITY', 'Maternity Leave'), ('PATERNITY', 'Paternity Leave'), ('EARNED', 'Earned Leave'), ('COMPENSATORY', 'Compensatory Leave'), ('UNPAID', 'Unpaid Leave'), ('BEREAVEMENT', 'Bereavement Leave'), ('STUDY', 'Study Leave'), ('HALF-DAY', 'Half-Day Leave'), ('MARRIAGE', 'Marriage Leave'), ('SPECIAL', 'Special Leave')], max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('annual_allowance', models.PositiveIntegerField(default=0)),
                ('allow_carry_forward', models.BooleanField(default=False, verbose_name='? is carry forwardable')),
                ('max_carry_forward_limit', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('accrues_monthly', models.BooleanField(default=False, verbose_name='Is monthly accurable')),
                ('accrual_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('morning', 'Morning Shift'), ('evening', 'Evening Shift'), ('night', 'Night Shift')], max_length=20, unique=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('check_in_time', models.TimeField()),
                ('check_out_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the holiday (e.g., New Year's Day, Christmas)", max_length=255)),
                ('holiday_date', models.DateField(help_text='Date of the holiday')),
                ('holiday_type', models.CharField(choices=[('public', 'Public Holiday'), ('company', 'Company Holiday'), ('weekly', 'Weekly Holiday')], default='public', help_text='Type of holiday (e.g., public holiday, company holiday, weekly holiday)', max_length=50)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['holiday_date'],
            },
        ),
        migrations.CreateModel(
            name='LatePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_id', models.CharField(blank=True, max_length=50, null=True)),
                ('late_policy_type', models.CharField(blank=True, choices=[('consecutive_late', 'Consecutive late'), ('monthly_total_late', 'Monthly Total late')], max_length=50, null=True)),
                ('max_check_in_time', models.TimeField(blank=True, help_text='Max allowed check-in time before considered late', null=True)),
                ('max_consecutive_late_in_before_leave_deduction', models.IntegerField(blank=True, help_text='Number of consecutive lates before leave deduction', null=True)),
                ('max_consecutive_early_out_before_leave_deduction', models.IntegerField(blank=True, help_text='Number of consecutive early clock-outs before leave deduction', null=True)),
                ('max_monthly_early_out_before_leave_deduction', models.IntegerField(blank=True, help_text='Total number of early clock-outs per month before leave deduction', null=True)),
                ('max_monthly_late_in_before_leave_deduction', models.IntegerField(blank=True, help_text='Number of times an employee can be late per month without penalty', null=True)),
                ('max_consecutive_early_out_before_salary_deduction', models.IntegerField(blank=True, help_text='Number of lates allowed per month before salary deduction', null=True)),
                ('max_consecutive_lates_in_before_salary_deduction', models.IntegerField(blank=True, help_text='Number of lates allowed per month before salary deduction', null=True)),
                ('max_monthly_early_out_before_salary_deduction', models.IntegerField(blank=True, help_text='Number of lates allowed per month before salary deduction', null=True)),
                ('max_monthly_lates_in_before_salary_deduction', models.IntegerField(blank=True, help_text='Number of lates allowed per month before salary deduction', null=True)),
                ('flexible_hours', models.BooleanField(default=False, help_text='Allow employees to compensate late time by staying late')),
                ('senior_staff_exempt', models.BooleanField(default=True, help_text='Exclude senior employees from late penalties')),
                ('salary_deduction_percentage_for_late_policy_violation', models.FloatField(blank=True, help_text='Percentage of daily salary deducted for excessive lateness', null=True)),
                ('leave_day_deduction_for_late_policy_violation', models.FloatField(blank=True, help_text='Number of leave days deducted when late policy is violated', null=True)),
                ('biometric_tracking', models.BooleanField(default=True, help_text='Enable biometric tracking for attendance')),
                ('auto_deduction_enabled', models.BooleanField(default=True, help_text='Automatically deduct leave or salary if limits are exceeded')),
                ('weekened', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveBalanceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.employee')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leavemanagement.leavetype')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.CharField(blank=True, max_length=30, null=True)),
                ('applied_start_date', models.DateField()),
                ('applied_end_date', models.DateField()),
                ('applied_no_of_days', models.PositiveBigIntegerField(blank=True, null=True)),
                ('applied_reason', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='leave_attachments/')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('applied_on', models.DateTimeField(auto_now_add=True)),
                ('approved_start_date', models.DateField(blank=True, null=True)),
                ('approved_end_date', models.DateField(blank=True, null=True)),
                ('approved_no_of_days', models.PositiveBigIntegerField(blank=True, null=True)),
                ('approved_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.employee')),
                ('leave_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leavemanagement.leavetype')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeLeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('carry_forward', models.PositiveIntegerField(default=0)),
                ('year', models.PositiveIntegerField(default=2025)),
                ('total_available', models.PositiveIntegerField(blank=True, null=True)),
                ('last_accrued_month', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.employee')),
                ('leave_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leave_balance', to='leavemanagement.leavetype')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryDeductionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.employee')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('first_check_in', models.TimeField()),
                ('last_check_out', models.TimeField()),
                ('total_hours_worked', models.DurationField(blank=True, null=True)),
                ('attendance_status', models.CharField(choices=[('present', 'present'), ('absent', 'absent'), ('weekend', 'weekend'), ('holiday', 'holiday')], default='None', max_length=50)),
                ('is_late', models.BooleanField(default=False)),
                ('left_early', models.BooleanField(default=False)),
                ('leave_deducted', models.BooleanField(default=False)),
                ('salary_deducted', models.BooleanField(default=False)),
                ('flexible_hours_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_attendance', to='core.employee')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shift_attendance', to='leavemanagement.shift')),
            ],
        ),
        migrations.CreateModel(
            name='RosterSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('day_off', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.employee')),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leavemanagement.shift')),
            ],
            options={
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
